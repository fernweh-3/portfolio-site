name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    env:
      TESTING: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Setup Python Virtual Environment
        run: |
          python -m venv .venv

      - name: Install dependencies
        run: |
          .venv/bin/pip install -r requirements.txt

      - name: Run tests
        run: |
          ./run_test.sh

      - name: Notify Discord (tests success)
        if: success()
        run: |
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=✅ Tests Passed"

      - name: Notify Discord (tests failure)
        if: failure()
        run: |
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=❌ Tests Failed"

  deploy:
    name: "Deploy to VPS"
    runs-on: ubuntu-latest
    needs: test # Ensure tests pass before deploying
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key.pem
          chmod 600 ~/.ssh/deploy_key.pem
          cat >> ~/.ssh/config <<END
          Host my-vps
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy_key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_IP: ${{ secrets.SSH_IP }}

      - name: Print Project Directory
        run: |
          ssh my-vps 'cd ${{ secrets.PROJECT_ROOT }} && pwd'

      - name: Deploy Site
        run: |
          ssh my-vps 'cd ${{ secrets.PROJECT_ROOT }} && chmod +x redeploy-site.sh && ./redeploy-site.sh'

      - name: Print Out Container Status
        run: |
          ssh my-vps 'cd ${{ secrets.PROJECT_ROOT }} && docker compose ps'

      - name: Deployment Notification
        if: success()
        run: |
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=🚀 Deployment Successful"

      - name: Deployment Notification (failure)
        if: failure()
        run: |
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=🚨 Deployment Failed"
